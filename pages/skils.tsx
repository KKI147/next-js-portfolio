import Head from "next/head";
import styled, { css, keyframes } from "styled-components";
import Wrapper from "@/component/Wrapper";
import Image from "next/image";

interface CssType {
  variant: string;
}
export default function Skils() {
  return (
    <>
      <Head>
        <title>SKils</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper>
        <ContentLayout>
          <LineBox>
            <Line></Line>
            <div>Front-end(FE)</div>
          </LineBox>
          <Box>
            <ImageBox>
              <Image
                src={"/images/html.png"}
                width={64}
                height={64}
                alt="image"
                loading="lazy"
                style={{
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                }}
              />
            </ImageBox>
            <ContentBox>
              <FlexBox>
                <Title>Name,</Title>
                <Content>HTML 5</Content>
              </FlexBox>
              <FlexBox>
                <Title>Proficiency,</Title>
                <Graph>
                  <Animation variant="html" />
                  <Test>65%</Test>
                </Graph>
              </FlexBox>
              <FlexBox>
                <Title>Summary,</Title>
                <Content>
                  <ContentText>
                    <div>
                      - Dom의 구조와 Web에 어떻게 렌더링이 되는지 이해하고
                      있습니다.
                    </div>
                    <div>
                      - HTTP Method를 통해 비동기 통신을 구현할 수 있습니다.
                    </div>
                    <div>
                      - TAG 와 MetaTAG및 SEO에 대한 필요성을 이해하고 있습니다.
                    </div>
                  </ContentText>
                </Content>
              </FlexBox>
            </ContentBox>
          </Box>
          <Box>
            <ImageBox>
              <Image
                src={"/images/css.png"}
                width={64}
                height={64}
                alt="image"
                loading="lazy"
                style={{
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                }}
              />
            </ImageBox>
            <ContentBox>
              <FlexBox>
                <Title>Name,</Title>
                <Content>CSS 3</Content>
              </FlexBox>
              <FlexBox>
                <Title>Proficiency,</Title>
                <Graph>
                  <Animation variant="css" />
                  <Test>65%</Test>
                </Graph>
              </FlexBox>
              <FlexBox>
                <Title>Summary,</Title>
                <Content>
                  <ContentText>
                    <div>
                      - 디자이너님과 협업하여 CSS Publishing 경험이 있습니다.
                    </div>
                    <div>
                      - Media Query를 사용하여 반응형 웹을 만들어본 경험이
                      있습니다.
                    </div>
                    <div>
                      - Props와 Switch문을 활용하여 전역으로 Css값을 사용할 수
                      있습니다.
                    </div>
                  </ContentText>
                </Content>
              </FlexBox>
            </ContentBox>
          </Box>
          <Box>
            <ImageBox>
              <Image
                src={"/images/javascript.png"}
                width={64}
                height={64}
                alt="image"
                loading="lazy"
                style={{
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                }}
              />
            </ImageBox>
            <ContentBox>
              <FlexBox>
                <Title>Name,</Title>
                <Content>JavaScript</Content>
              </FlexBox>
              <FlexBox>
                <Title>Proficiency,</Title>
                <Graph>
                  <Animation variant="js" />
                  <Test>65%</Test>
                </Graph>
              </FlexBox>
              <FlexBox>
                <Title>Summary,</Title>
                <Content>
                  <ContentText>
                    <div>
                      - Javascript의 기초적인 변수, 형변환, 연산자, 함수등을
                      다룰수 있습니다.
                    </div>
                    <div>
                      - 변수선언 차이점, 화살표 함수, 구조 분해 할당등 Es6문법을
                      이해하고 다룰수 있습니다.
                    </div>
                  </ContentText>
                </Content>
              </FlexBox>
            </ContentBox>
          </Box>
          <Box>
            <ImageBox>
              <Image
                src={"/images/react.png"}
                width={64}
                height={64}
                alt="image"
                loading="lazy"
                style={{
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                }}
              />
            </ImageBox>
            <ContentBox>
              <FlexBox>
                <Title>Name,</Title>
                <Content>React</Content>
              </FlexBox>
              <FlexBox>
                <Title>Proficiency,</Title>
                <Graph>
                  <Animation variant="react" />
                  <Test>60%</Test>
                </Graph>
              </FlexBox>
              <FlexBox>
                <Title>Summary,</Title>
                <Content>
                  <Content>
                    <ContentText>
                      <div>- React의 render 과정을 이해하고 있습니다.</div>
                      <div>
                        - React의 Life Cycle을 이해하고 있으며 useState,
                        useEffect같은 hook을 사용할수 있습니다.
                      </div>
                    </ContentText>
                  </Content>
                </Content>
              </FlexBox>
            </ContentBox>
          </Box>
          <Box>
            <ImageBox>
              <Image
                src={"/images/typescript.png"}
                width={64}
                height={64}
                alt="image"
                loading="lazy"
                style={{
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                }}
              />
            </ImageBox>
            <ContentBox>
              <FlexBox>
                <Title>Name,</Title>
                <Content>TypeScript</Content>
              </FlexBox>
              <FlexBox>
                <Title>Proficiency,</Title>
                <Graph>
                  <Animation variant="ts" />
                  <Test>55%</Test>
                </Graph>
              </FlexBox>
              <FlexBox>
                <Title>Summary,</Title>
                <Content>
                  <ContentText>
                    <div>
                      - TypeScript의 필요성에 대해 이해하고 있으며 기초적인
                      타입을 지정할 수 있습니다..
                    </div>
                    <div>
                      - 다양한 프로젝트를 만들면서 꾸준히 학습중 입니다.
                    </div>
                  </ContentText>
                </Content>
              </FlexBox>
            </ContentBox>
          </Box>
          <Box>
            <ImageBox>
              <Image
                src={"/images/next.png"}
                width={64}
                height={64}
                alt="image"
                loading="lazy"
                style={{
                  position: "absolute",
                  top: "50%",
                  left: "50%",
                  transform: "translate(-50%, -50%)",
                }}
              />
            </ImageBox>
            <ContentBox>
              <FlexBox>
                <Title>Name,</Title>
                <Content>Next-JS</Content>
              </FlexBox>
              <FlexBox>
                <Title>Proficiency,</Title>
                <Graph>
                  <Animation variant="next" />
                  <Test>55%</Test>
                </Graph>
              </FlexBox>
              <FlexBox>
                <Title>Summary,</Title>
                <Content>
                  <ContentText>
                    <div>
                      - React와 Next-JS의 차이점을 이해하고 SSR, SEO,
                      TypeScript와 접목해서 다룰수 있습니다.
                    </div>
                    <div>
                      - 다양한 프로젝트를 만들면서 꾸준히 학습중 입니다.
                    </div>
                  </ContentText>
                </Content>
              </FlexBox>
            </ContentBox>
          </Box>
        </ContentLayout>
      </Wrapper>
    </>
  );
}

const ContentLayout = styled.div`
  font-size: 2rem;
  color: #fff;
`;
const LineBox = styled.div`
  display: flex;
`;
const Line = styled.div`
  width: 4px;
  height: 33px;
  margin: 0 10px 0 0;
  background-color: #fff;
`;
const Box = styled.div`
  display: flex;
  margin: 30px 0;
`;

const ImageBox = styled.div`
  position: relative;
  width: 100px;
  height: 100px;
  border-radius: 16px;
  background-color: #fff;
`;

const ContentBox = styled.div`
  margin: 0 0 0 30px;
`;

const FlexBox = styled.div`
  display: flex;
  /* height: 25px; */
  /* align-items: center; */
  margin: 10px 0;
`;
const Title = styled.div`
  width: 150px;
  font-size: 1.2rem;
`;

const Content = styled.div`
  color: #8e8e8e;
  font-size: 1rem;
`;

const ContentText = styled.div`
  margin: 5px 0;
  line-height: 1.4;
`;
const HtmlEffect = keyframes`
0% {
  width: 0px;
      background-color: #888888;
}
100% {
  width: 65%;
      background-color: #ffa877;
}
`;
const CssEffect = keyframes`
0% {
  width: 0px;
      background-color: #888888;
}
100% {
  width: 65%;
      background-color: #ffa877;
}
`;

const JsEffect = keyframes`
0% {
  width: 0px;
      background-color: #888888;
}
100% {
  width: 65%;
      background-color: #ffa877;
}
`;

const ReactEffect = keyframes`
0% {
  width: 0px;
      background-color: #888888;
}
100% {
  width: 60%;
      background-color: #ffa877;
}
`;

const TsEffect = keyframes`
0% {
  width: 0px;
      background-color: #888888;
}
100% {
  width: 55%;
      background-color: #ffa877;
}
`;

const NextEffect = keyframes`
0% {
  width: 0px;
      background-color: #888888;
}
100% {
  width: 55%;
      background-color: #ffa877;
}
`;

const Animation = styled.div`
  ${({ variant }: CssType) => {
    switch (variant) {
      case "html":
        return css`
          position: absolute;
          width: 65%;
          height: 100%;
          animation: ${HtmlEffect} 2s;
          border-radius: 24px;
          background-color: #ffa877;
          z-index: 2;
        `;
      case "css":
        return css`
          position: absolute;
          width: 65%;
          height: 100%;
          animation: ${CssEffect} 2s;
          border-radius: 24px;
          background-color: #ffa877;
          z-index: 2;
        `;
      case "js":
        return css`
          position: absolute;
          width: 65%;
          height: 100%;
          animation: ${JsEffect} 2s;
          border-radius: 24px;
          background-color: #ffa877;
          z-index: 2;
        `;
      case "react":
        return css`
          position: absolute;
          width: 60%;
          height: 100%;
          animation: ${ReactEffect} 2s;
          border-radius: 24px;
          background-color: #ffa877;
          z-index: 2;
        `;
      case "ts":
        return css`
          position: absolute;
          width: 55%;
          height: 100%;
          animation: ${TsEffect} 2s;
          border-radius: 24px;
          background-color: #ffa877;
          z-index: 2;
        `;
      case "next":
        return css`
          position: absolute;
          width: 55%;
          height: 100%;
          animation: ${NextEffect} 2s;
          border-radius: 24px;
          background-color: #ffa877;
          z-index: 2;
        `;
      default:
        break;
    }
  }}
`;

const Graph = styled.div`
  position: relative;
  width: 650px;
  height: 18px;
  text-align: center;
  font-size: 1rem;
  border-radius: 24px;
  background-color: #888888;
`;

const Test = styled.div`
  position: absolute;
  right: 5%;
  color: #fff;
  font-size: 1rem;
  z-index: 5;
`;
