import Head from "next/head";
import styled, { css } from "styled-components";

interface CssType {
  variant: string;
}
export default function Projects() {
  return (
    <>
      <Head>
        <title>Projects</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <>
        <Line>
          {/* project */}
          <ProjectList>
            <ProjectContainer variant="right">
              <ProjectHeader>2023.03</ProjectHeader>
              <ContentContainer>
                <ContentTitle>Portfolio</ContentTitle>
                <Content>
                  <div>
                    ‣ 본인의 기술스택 정리와 구현해보고자 했던 기술을 적용한
                    포트폴리오 사이트.
                  </div>
                  <div>‣ Next-Js와 TypeScript를 학습 후 재작.</div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>

          {/* project */}
          <ProjectList>
            <ProjectContainer variant="left">
              <ProjectHeader>2023.02</ProjectHeader>
              <ContentContainer>
                <ContentTitle>F:E Func, Development</ContentTitle>
                <Content>
                  <div>
                    ‣ FE에서 사용자에게 자주 사용되고 유용한 서비스를 리스트업
                    하고 학습 및 개발.
                  </div>
                  <div>‣ React Hook form, yup를 이용한 회원가입 개발</div>
                  <div>‣ 입력값 검증 및 로그인 개발.</div>
                  <div>
                    ‣ FormData 및 Multer를 사용한 첨부파일 업로드 개발예정.
                  </div>
                  <div>
                    ‣ FormData 및 Multer를 사용한 첨부파일 다운로드 개발예정.
                  </div>
                  <div>
                    ‣ React-Sun-Editor를 사용한 Editor Service 개발예정.
                  </div>
                  <div>
                    ‣ 간단한 입력폼의 정보를 React Hook Form, Email-JS를 통한
                    메일전송 개발.
                  </div>
                  <div>‣ React-Calender 개발예정.</div>
                  <div>‣ Kakao Map API Service를 통한 Map 개발예정.</div>
                  <div>‣ Recoil Store를 통한 Loading Component 개발예정.</div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>

          {/* project */}
          <ProjectList>
            <ProjectContainer variant="right">
              <ProjectHeader>2023.01</ProjectHeader>
              <ContentContainer>
                <ContentTitle>카카오(Kakao) 클론코딩</ContentTitle>
                <Content>
                  <div>
                    ‣ 카카오 페이지의 Card Component 반응형 CSS 학습을 위한
                    클론코딩.
                  </div>
                  <div>
                    ‣ 작년에 새로 배포된 Next.js v13 사용 및 SSR 서비스 학습.
                  </div>
                  <div>‣ 각 화면 width에 따른 반응형 CSS 개발.</div>
                  <div>‣ Component Props Type, Interface 학습 및 적용.</div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>

          {/* project */}
          <ProjectList>
            <ProjectContainer variant="left">
              <ProjectHeader>2023.01</ProjectHeader>
              <ContentContainer>
                <ContentTitle>Portfolio</ContentTitle>
                <Content>
                  <div>
                    ‣ 본인의 기술스택 정리와 구현해보고자 했던 기술을 적용한
                    포트폴리오 사이트.
                  </div>
                  <div>‣ Swiper를 활용한 Page Section Scroll 개발.</div>
                  <div>‣ createPortal 통해 Modal 개발.</div>
                  <div>
                    ‣ React-Slider를 활용하여, 포트폴리오 목록을 carousel로
                    개발.
                  </div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>

          {/* project */}
          <ProjectList>
            <ProjectContainer variant="right">
              <ProjectHeader>2022.12</ProjectHeader>
              <ContentContainer>
                <ContentTitle>Vongole</ContentTitle>
                <Content>
                  <div>
                    ‣ 비동기 API 통신 및 Redux를 사용한 게시판 댓글 CRUD 서비스
                    개발.
                  </div>
                  <div>‣ React-Calendar를 사용한 달력 개발.</div>
                  <div>
                    ‣ 월별 봉사일정 및 회원 각 개인일정 표기 Calendar Event
                    개발.
                  </div>
                  <div>‣ Kakao Map API를 사용한 Component 개발.</div>
                  <div>‣ 선택 및 특정지역 Marker 표기 개발.</div>
                  <div>
                    ‣ Figma Design File을 통한 디자이너와 협업 퍼블리싱 진행.
                  </div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>

          {/* project */}
          <ProjectList>
            <ProjectContainer variant="left">
              <ProjectHeader>2022.11</ProjectHeader>
              <ContentContainer>
                <ContentTitle>Velog 클론코딩</ContentTitle>
                <Content>
                  <div>
                    ‣ Velog 클론코딩과 서비스 및 기능 이해를 위한 프로젝트.
                  </div>
                  <div>
                    ‣ 비동기 API 통신 및 Redux를 사용한 게시글 CRUD 서비스 개발.
                  </div>
                  <div>
                    ‣ Toast Editor 라이브러리 사용 및 게시글 Markdown Format
                    적용 개발.
                  </div>
                  <div>
                    ‣ FormData를 이용한 이미지 업로드 및 미리보기 기능 개발.
                  </div>
                  <div>‣ 프로젝트 퍼블리싱 및 Nav Bar Component 개발.</div>
                  <div>‣ 프로젝트 일정관리 및 협업 Notion 이용.</div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>

          {/* project */}
          <ProjectList>
            <ProjectContainer variant="right">
              <ProjectHeader>2022.11</ProjectHeader>
              <ContentContainer>
                <ContentTitle>Race-of-the-belly</ContentTitle>
                <Content>
                  <div>
                    ‣ 배달의민족 기능 및 서비스를 오마주하여 개발한 음식점 등록,
                    주문 서비스.
                  </div>
                  <div>
                    ‣ 회원가입 시 회원 유형에 따른 가입 서비스 로직 분기 개발.
                  </div>
                  <div>
                    ‣ JWT Token을 이용한 API 통신 및 회원가입 기능 개발.
                  </div>
                  <div>
                    ‣ 로그인 입력 값에 따른 유효성 검사(Regex, 정규 표현식)
                    개발.
                  </div>
                  <div>
                    ‣ 기본 비동기 API 통신을 통한 게시글 CRD 서비스 개발.
                  </div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>

          {/* project */}
          <ProjectList>
            <ProjectContainer variant="left">
              <ProjectHeader>2022.10</ProjectHeader>
              <ContentContainer>
                <ContentTitle>To Do List</ContentTitle>
                <Content>
                  <div>
                    ‣ 스스로 해야하는 목록에 대해서 첫 CRUD 개발 사이트.
                  </div>
                  <div>‣ 게시글 목록에 대한 작성 및 사용자 Alert 개발.</div>
                  <div>‣ 게시글 삭제 및 API 데모 통신 개발.</div>
                  <div>‣ 프로젝트 퍼블리싱.</div>
                </Content>
              </ContentContainer>
            </ProjectContainer>
          </ProjectList>
        </Line>
      </>
    </>
  );
}

const Line = styled.ul`
  display: inline-block;
  position: absolute;
  width: 2px;
  top: 64px;
  left: 50%;
  transform: translate(-50%, 0);
  background-color: #6a6a6a;

  :after {
    content: "";
    display: block;
    height: 50px;
    background-color: #444444;
  }
  @media (max-width: 1024px) {
    left: 7%;
  }
`;

const ProjectList = styled.li`
  position: relative;
  min-height: 60px;
  margin: 0 0 12px 0;
  :before {
    display: block;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    content: "";
    width: 16px;
    height: 16px;
    background-color: #fff;
    border-radius: 25px;
    z-index: 2;
  }

  :after {
    display: block;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    content: "";
    width: 26px;
    height: 26px;
    background-color: #848484;
    border-radius: 25px;
    z-index: 1;
  }
  transition: all 0.5s;
  &:hover {
    transform: translateY(-5%);
  }
`;
const ProjectContainer = styled.div`
  background-color: #353535;
  position: relative;
  width: calc(42.5vw - 100px);

  color: #fff;
  padding: 20px 24px;
  border-radius: 16px;

  box-shadow: 1px 1px 8px 2px rgba(255, 255, 255, 0.05);
  ${({ variant }: CssType) => {
    switch (variant) {
      case "right":
        return css`
          left: 40px;
          margin: 0 0 36px 0;

          /* @media (max-width: 640px) {
            left: 37px;
          }
          @media (max-width: 480px) {
            left: 34px;
          } */
        `;
      case "left":
        return css`
          right: 40vw;
          margin: 36px 0 0 10px;

          /* @media (max-width: 640px) {
            right: 43vw;
          }
          @media (max-width: 480px) {
            right: 42vw;
          } */
        `;
      default:
        break;
    }
  }}
  @media (max-width: 1024px) {
    width: calc(90vw - 100px);
    left: 40px;
    margin: 0 0 36px 0;
  }
  @media (max-width: 640px) {
    /* width: calc(52vw - 100px);
    padding: 18px 20px; */
    margin: 0 0 32px 0;
  }
  @media (max-width: 480px) {
    /* width: calc(55vw - 100px);
    padding: 14px 20px; */
    margin: 0 0 28px 0;
  }
`;
const ProjectHeader = styled.div`
  font-size: 1.2rem;
  margin: 0 0 12px 0;
  @media (max-width: 1024px) {
    font-size: 1.1rem;
  }
  @media (max-width: 640px) {
    font-size: 1rem;
  }
  @media (max-width: 480px) {
    font-size: 0.9rem;
  }
`;
const ContentContainer = styled.div``;
const ContentTitle = styled.div`
  font-size: 1.3rem;
  font-weight: bold;
  margin: 0 0 8px 0;
  @media (max-width: 1024px) {
    font-size: 1.2rem;
  }
  @media (max-width: 640px) {
    font-size: 1.1rem;
  }
  @media (max-width: 480px) {
    font-size: 1rem;
  }
`;
const Content = styled.div`
  font-size: 1rem;
  color: #8e8e8e;
  line-height: 28px;
  word-break: keep-all;
  @media (max-width: 1024px) {
    font-size: 0.9rem;
    line-height: 26px;
  }
  @media (max-width: 640px) {
    font-size: 0.8rem;
    line-height: 24px;
  }
  @media (max-width: 480px) {
    font-size: 0.7rem;
  }
`;
